// Generated by gmmproc 2.78.1 -- DO NOT MODIFY!
#ifndef _GTKMM_ERROR_H
#define _GTKMM_ERROR_H

#include <gtkmmconfig.h>


#include <glibmm/ustring.h>
#include <sigc++/sigc++.h>

/* Copyright (C) 2022 The gtkmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library. If not, see <http://www.gnu.org/licenses/>.
 */


#include <glibmm/error.h>


namespace Gtk
{
class DialogError : public Glib::Error
{
public:
  /**  @var Code FAILED
   * Generic error condition for when
   * an operation fails and no more specific code is applicable.
   * 
   *  @var Code CANCELLED
   * The async function call was cancelled
   * via its `Cancellable`.
   * 
   *  @var Code DISMISSED
   * The operation was cancelled
   * by the user (via a Cancel or Close button).
   * 
   *  @enum Code
   * 
   * %Error codes in the `Gtk::DialogError` domain that can be returned
   * by async dialog functions.
   * 
   * @newin{4,10}
   */
  enum Code
  {
    FAILED,
    CANCELLED,
    DISMISSED
  };

  GTKMM_API DialogError(Code error_code, const Glib::ustring& error_message);
  GTKMM_API explicit DialogError(GError* gobject);
  GTKMM_API Code code() const;

#ifndef DOXYGEN_SHOULD_SKIP_THIS
private:

  GTKMM_API static void throw_func(GError* gobject);

  friend GTKMM_API void wrap_init(); // uses throw_func()

  #endif //DOXYGEN_SHOULD_SKIP_THIS
};

} // namespace Gtk

#ifndef DOXYGEN_SHOULD_SKIP_THIS
namespace Glib
{

template <>
class GTKMM_API Value<Gtk::DialogError::Code> : public Glib::Value_Enum<Gtk::DialogError::Code>
{
public:
  static GType value_type() G_GNUC_CONST;
};

} // namespace Glib
#endif /* DOXYGEN_SHOULD_SKIP_THIS */

namespace Gtk
{


} // namespace Gtk


#endif /* _GTKMM_ERROR_H */

